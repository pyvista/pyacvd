# build pyacvd wheels

variables:
  package_name: pyacvd

trigger:
  branches:
    include:
    - '*'
  tags:
    include:
    - '*'

jobs:
- job: Linux
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'
    - script: |
        set -ex
        chmod +x .ci/build_wheels.sh
        docker run -e package_name=$(package_name) --rm -v `pwd`:/io quay.io/pypa/manylinux2010_x86_64 /io/.ci/build_wheels.sh $(python.version)
      displayName: Build wheel using manylinux2010
    - script: |
        pip install dist/*.whl
      displayName: Install wheel
    - script: |
        pip install -r requirements_test.txt
        pip install pytest-azurepipelines
        (cd tests && pytest --cov $(package_name) --cov-report html)
    - template: .ci/azure-publish-dist.yml


- job: macOS
  variables:
    python.architecture: 'x64'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
  pool:
    vmImage: 'macOS-10.14'
  steps:
    - script: |
        chmod +x .ci/macos-install-python.sh
        .ci/macos-install-python.sh '$(python.version)'
      displayName: Install Python
    - template: .ci/azure-setup.yml
    - template: .ci/azure-steps.yml
    - template: .ci/azure-publish-dist.yml


- job: Windows
  pool:
    vmIMage: 'VS2017-Win2016'
  variables:
    python.architecture: 'x64'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
  steps:
    - template: .ci/azure-setup.yml
    - template: .ci/azure-steps.yml
    - template: .ci/azure-publish-dist.yml